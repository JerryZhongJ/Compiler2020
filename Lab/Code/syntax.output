Nonterminals useless in grammar

   Args


Terminals unused in grammar

   ELSE
   WHILE
   DIV
   DOT


Rules useless in grammar

   51 Args: Exp COMMA Args
   52     | Exp


Rules useless in parser due to conflicts

   30 Stmt: IF LP Exp RP Stmt


State 89 conflicts: 10 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: ExtDefList

    2 ExtDefList: ExtDef ExtDefList
    3           | %empty

    4 ExtDef: Specifier ExtDecList SEMI
    5       | Specifier SEMI
    6       | Specifier FunDec CompSt

    7 ExtDecList: VarDec
    8           | VarDec COMMA ExtDecList

    9 Specifier: TYPE
   10          | StructSpecifier

   11 StructSpecifier: STRUCT OptTag LC DefList RC
   12                | STRUCT Tag

   13 OptTag: ID
   14       | %empty

   15 Tag: ID

   16 VarDec: ID
   17       | VarDec LB INT RB

   18 FunDec: ID LP ParamList RP
   19       | ID LP RP

   20 ParamList: ParamDec COMMA ParamList
   21          | ParamDec

   22 ParamDec: Specifier VarDec

   23 CompSt: LC DefList StmtList RC

   24 StmtList: Stmt StmtList
   25         | %empty

   26 Stmt: Exp SEMI
   27     | CompSt
   28     | RETURN Exp SEMI
   29     | IF LP Exp RP Stmt
   30     | IF LP Exp RP Stmt

   31 DefList: Def DefList
   32        | %empty

   33 Def: Specifier DecList SEMI

   34 DecList: Dec
   35        | Dec COMMA DecList

   36 Dec: VarDec
   37    | VarDec ASSIGNOP Exp

   38 Exp: Exp ASSIGNOP Exp
   39    | Exp AND Exp
   40    | Exp OR Exp
   41    | Exp RELOP Exp
   42    | Exp PLUS Exp
   43    | Exp MINUS Exp
   44    | Exp STAR Exp
   45    | LP Exp RP
   46    | MINUS Exp
   47    | NOT Exp
   48    | ID
   49    | INT
   50    | FLOAT


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 17 49
FLOAT (259) 50
ID (260) 13 15 16 18 19 48
TYPE (261) 9
SEMI (262) 4 5 26 28 33
COMMA (263) 8 20 35
LC (264) 11 23
RC (265) 11 23
STRUCT (266) 11 12
RETURN (267) 28
IF (268) 29 30
ELSE (269)
WHILE (270)
ASSIGNOP (271) 37 38
OR (272) 40
AND (273) 39
RELOP (274) 41
PLUS (275) 42
MINUS (276) 43 46
STAR (277) 44
DIV (278)
UMINUS (279)
NOT (280) 47
LP (281) 18 19 29 30 45
RP (282) 18 19 29 30 45
LB (283) 17
RB (284) 17
DOT (285)


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
Program (32)
    on left: 1, on right: 0
ExtDefList (33)
    on left: 2 3, on right: 1 2
ExtDef (34)
    on left: 4 5 6, on right: 2
ExtDecList (35)
    on left: 7 8, on right: 4 8
Specifier (36)
    on left: 9 10, on right: 4 5 6 22 33
StructSpecifier (37)
    on left: 11 12, on right: 10
OptTag (38)
    on left: 13 14, on right: 11
Tag (39)
    on left: 15, on right: 12
VarDec (40)
    on left: 16 17, on right: 7 8 17 22 36 37
FunDec (41)
    on left: 18 19, on right: 6
ParamList (42)
    on left: 20 21, on right: 18 20
ParamDec (43)
    on left: 22, on right: 20 21
CompSt (44)
    on left: 23, on right: 6 27
StmtList (45)
    on left: 24 25, on right: 23 24
Stmt (46)
    on left: 26 27 28 29 30, on right: 24 29 30
DefList (47)
    on left: 31 32, on right: 11 23 31
Def (48)
    on left: 33, on right: 31
DecList (49)
    on left: 34 35, on right: 33 35
Dec (50)
    on left: 36 37, on right: 34 35
Exp (51)
    on left: 38 39 40 41 42 43 44 45 46 47 48 49 50, on right: 26 28
    29 30 37 38 39 40 41 42 43 44 45 46 47


State 0

    0 $accept: . Program $end

    TYPE    shift, and go to state 1
    STRUCT  shift, and go to state 2

    $default  reduce using rule 3 (ExtDefList)

    Program          go to state 3
    ExtDefList       go to state 4
    ExtDef           go to state 5
    Specifier        go to state 6
    StructSpecifier  go to state 7


State 1

    9 Specifier: TYPE .

    $default  reduce using rule 9 (Specifier)


State 2

   11 StructSpecifier: STRUCT . OptTag LC DefList RC
   12                | STRUCT . Tag

    ID  shift, and go to state 8

    $default  reduce using rule 14 (OptTag)

    OptTag  go to state 9
    Tag     go to state 10


State 3

    0 $accept: Program . $end

    $end  shift, and go to state 11


State 4

    1 Program: ExtDefList .

    $default  reduce using rule 1 (Program)


State 5

    2 ExtDefList: ExtDef . ExtDefList

    TYPE    shift, and go to state 1
    STRUCT  shift, and go to state 2

    $default  reduce using rule 3 (ExtDefList)

    ExtDefList       go to state 12
    ExtDef           go to state 5
    Specifier        go to state 6
    StructSpecifier  go to state 7


State 6

    4 ExtDef: Specifier . ExtDecList SEMI
    5       | Specifier . SEMI
    6       | Specifier . FunDec CompSt

    ID    shift, and go to state 13
    SEMI  shift, and go to state 14

    ExtDecList  go to state 15
    VarDec      go to state 16
    FunDec      go to state 17


State 7

   10 Specifier: StructSpecifier .

    $default  reduce using rule 10 (Specifier)


State 8

   13 OptTag: ID .
   15 Tag: ID .

    LC        reduce using rule 13 (OptTag)
    $default  reduce using rule 15 (Tag)


State 9

   11 StructSpecifier: STRUCT OptTag . LC DefList RC

    LC  shift, and go to state 18


State 10

   12 StructSpecifier: STRUCT Tag .

    $default  reduce using rule 12 (StructSpecifier)


State 11

    0 $accept: Program $end .

    $default  accept


State 12

    2 ExtDefList: ExtDef ExtDefList .

    $default  reduce using rule 2 (ExtDefList)


State 13

   16 VarDec: ID .
   18 FunDec: ID . LP ParamList RP
   19       | ID . LP RP

    LP  shift, and go to state 19

    $default  reduce using rule 16 (VarDec)


State 14

    5 ExtDef: Specifier SEMI .

    $default  reduce using rule 5 (ExtDef)


State 15

    4 ExtDef: Specifier ExtDecList . SEMI

    SEMI  shift, and go to state 20


State 16

    7 ExtDecList: VarDec .
    8           | VarDec . COMMA ExtDecList
   17 VarDec: VarDec . LB INT RB

    COMMA  shift, and go to state 21
    LB     shift, and go to state 22

    $default  reduce using rule 7 (ExtDecList)


State 17

    6 ExtDef: Specifier FunDec . CompSt

    LC  shift, and go to state 23

    CompSt  go to state 24


State 18

   11 StructSpecifier: STRUCT OptTag LC . DefList RC

    TYPE    shift, and go to state 1
    STRUCT  shift, and go to state 2

    $default  reduce using rule 32 (DefList)

    Specifier        go to state 25
    StructSpecifier  go to state 7
    DefList          go to state 26
    Def              go to state 27


State 19

   18 FunDec: ID LP . ParamList RP
   19       | ID LP . RP

    TYPE    shift, and go to state 1
    STRUCT  shift, and go to state 2
    RP      shift, and go to state 28

    Specifier        go to state 29
    StructSpecifier  go to state 7
    ParamList        go to state 30
    ParamDec         go to state 31


State 20

    4 ExtDef: Specifier ExtDecList SEMI .

    $default  reduce using rule 4 (ExtDef)


State 21

    8 ExtDecList: VarDec COMMA . ExtDecList

    ID  shift, and go to state 32

    ExtDecList  go to state 33
    VarDec      go to state 16


State 22

   17 VarDec: VarDec LB . INT RB

    INT  shift, and go to state 34


State 23

   23 CompSt: LC . DefList StmtList RC

    TYPE    shift, and go to state 1
    STRUCT  shift, and go to state 2

    $default  reduce using rule 32 (DefList)

    Specifier        go to state 25
    StructSpecifier  go to state 7
    DefList          go to state 35
    Def              go to state 27


State 24

    6 ExtDef: Specifier FunDec CompSt .

    $default  reduce using rule 6 (ExtDef)


State 25

   33 Def: Specifier . DecList SEMI

    ID  shift, and go to state 32

    VarDec   go to state 36
    DecList  go to state 37
    Dec      go to state 38


State 26

   11 StructSpecifier: STRUCT OptTag LC DefList . RC

    RC  shift, and go to state 39


State 27

   31 DefList: Def . DefList

    TYPE    shift, and go to state 1
    STRUCT  shift, and go to state 2

    $default  reduce using rule 32 (DefList)

    Specifier        go to state 25
    StructSpecifier  go to state 7
    DefList          go to state 40
    Def              go to state 27


State 28

   19 FunDec: ID LP RP .

    $default  reduce using rule 19 (FunDec)


State 29

   22 ParamDec: Specifier . VarDec

    ID  shift, and go to state 32

    VarDec  go to state 41


State 30

   18 FunDec: ID LP ParamList . RP

    RP  shift, and go to state 42


State 31

   20 ParamList: ParamDec . COMMA ParamList
   21          | ParamDec .

    COMMA  shift, and go to state 43

    $default  reduce using rule 21 (ParamList)


State 32

   16 VarDec: ID .

    $default  reduce using rule 16 (VarDec)


State 33

    8 ExtDecList: VarDec COMMA ExtDecList .

    $default  reduce using rule 8 (ExtDecList)


State 34

   17 VarDec: VarDec LB INT . RB

    RB  shift, and go to state 44


State 35

   23 CompSt: LC DefList . StmtList RC

    INT     shift, and go to state 45
    FLOAT   shift, and go to state 46
    ID      shift, and go to state 47
    LC      shift, and go to state 23
    RETURN  shift, and go to state 48
    IF      shift, and go to state 49
    MINUS   shift, and go to state 50
    NOT     shift, and go to state 51
    LP      shift, and go to state 52

    $default  reduce using rule 25 (StmtList)

    CompSt    go to state 53
    StmtList  go to state 54
    Stmt      go to state 55
    Exp       go to state 56


State 36

   17 VarDec: VarDec . LB INT RB
   36 Dec: VarDec .
   37    | VarDec . ASSIGNOP Exp

    ASSIGNOP  shift, and go to state 57
    LB        shift, and go to state 22

    $default  reduce using rule 36 (Dec)


State 37

   33 Def: Specifier DecList . SEMI

    SEMI  shift, and go to state 58


State 38

   34 DecList: Dec .
   35        | Dec . COMMA DecList

    COMMA  shift, and go to state 59

    $default  reduce using rule 34 (DecList)


State 39

   11 StructSpecifier: STRUCT OptTag LC DefList RC .

    $default  reduce using rule 11 (StructSpecifier)


State 40

   31 DefList: Def DefList .

    $default  reduce using rule 31 (DefList)


State 41

   17 VarDec: VarDec . LB INT RB
   22 ParamDec: Specifier VarDec .

    LB  shift, and go to state 22

    $default  reduce using rule 22 (ParamDec)


State 42

   18 FunDec: ID LP ParamList RP .

    $default  reduce using rule 18 (FunDec)


State 43

   20 ParamList: ParamDec COMMA . ParamList

    TYPE    shift, and go to state 1
    STRUCT  shift, and go to state 2

    Specifier        go to state 29
    StructSpecifier  go to state 7
    ParamList        go to state 60
    ParamDec         go to state 31


State 44

   17 VarDec: VarDec LB INT RB .

    $default  reduce using rule 17 (VarDec)


State 45

   49 Exp: INT .

    $default  reduce using rule 49 (Exp)


State 46

   50 Exp: FLOAT .

    $default  reduce using rule 50 (Exp)


State 47

   48 Exp: ID .

    $default  reduce using rule 48 (Exp)


State 48

   28 Stmt: RETURN . Exp SEMI

    INT    shift, and go to state 45
    FLOAT  shift, and go to state 46
    ID     shift, and go to state 47
    MINUS  shift, and go to state 50
    NOT    shift, and go to state 51
    LP     shift, and go to state 52

    Exp  go to state 61


State 49

   29 Stmt: IF . LP Exp RP Stmt
   30     | IF . LP Exp RP Stmt

    LP  shift, and go to state 62


State 50

   46 Exp: MINUS . Exp

    INT    shift, and go to state 45
    FLOAT  shift, and go to state 46
    ID     shift, and go to state 47
    MINUS  shift, and go to state 50
    NOT    shift, and go to state 51
    LP     shift, and go to state 52

    Exp  go to state 63


State 51

   47 Exp: NOT . Exp

    INT    shift, and go to state 45
    FLOAT  shift, and go to state 46
    ID     shift, and go to state 47
    MINUS  shift, and go to state 50
    NOT    shift, and go to state 51
    LP     shift, and go to state 52

    Exp  go to state 64


State 52

   45 Exp: LP . Exp RP

    INT    shift, and go to state 45
    FLOAT  shift, and go to state 46
    ID     shift, and go to state 47
    MINUS  shift, and go to state 50
    NOT    shift, and go to state 51
    LP     shift, and go to state 52

    Exp  go to state 65


State 53

   27 Stmt: CompSt .

    $default  reduce using rule 27 (Stmt)


State 54

   23 CompSt: LC DefList StmtList . RC

    RC  shift, and go to state 66


State 55

   24 StmtList: Stmt . StmtList

    INT     shift, and go to state 45
    FLOAT   shift, and go to state 46
    ID      shift, and go to state 47
    LC      shift, and go to state 23
    RETURN  shift, and go to state 48
    IF      shift, and go to state 49
    MINUS   shift, and go to state 50
    NOT     shift, and go to state 51
    LP      shift, and go to state 52

    $default  reduce using rule 25 (StmtList)

    CompSt    go to state 53
    StmtList  go to state 67
    Stmt      go to state 55
    Exp       go to state 56


State 56

   26 Stmt: Exp . SEMI
   38 Exp: Exp . ASSIGNOP Exp
   39    | Exp . AND Exp
   40    | Exp . OR Exp
   41    | Exp . RELOP Exp
   42    | Exp . PLUS Exp
   43    | Exp . MINUS Exp
   44    | Exp . STAR Exp

    SEMI      shift, and go to state 68
    ASSIGNOP  shift, and go to state 69
    OR        shift, and go to state 70
    AND       shift, and go to state 71
    RELOP     shift, and go to state 72
    PLUS      shift, and go to state 73
    MINUS     shift, and go to state 74
    STAR      shift, and go to state 75


State 57

   37 Dec: VarDec ASSIGNOP . Exp

    INT    shift, and go to state 45
    FLOAT  shift, and go to state 46
    ID     shift, and go to state 47
    MINUS  shift, and go to state 50
    NOT    shift, and go to state 51
    LP     shift, and go to state 52

    Exp  go to state 76


State 58

   33 Def: Specifier DecList SEMI .

    $default  reduce using rule 33 (Def)


State 59

   35 DecList: Dec COMMA . DecList

    ID  shift, and go to state 32

    VarDec   go to state 36
    DecList  go to state 77
    Dec      go to state 38


State 60

   20 ParamList: ParamDec COMMA ParamList .

    $default  reduce using rule 20 (ParamList)


State 61

   28 Stmt: RETURN Exp . SEMI
   38 Exp: Exp . ASSIGNOP Exp
   39    | Exp . AND Exp
   40    | Exp . OR Exp
   41    | Exp . RELOP Exp
   42    | Exp . PLUS Exp
   43    | Exp . MINUS Exp
   44    | Exp . STAR Exp

    SEMI      shift, and go to state 78
    ASSIGNOP  shift, and go to state 69
    OR        shift, and go to state 70
    AND       shift, and go to state 71
    RELOP     shift, and go to state 72
    PLUS      shift, and go to state 73
    MINUS     shift, and go to state 74
    STAR      shift, and go to state 75


State 62

   29 Stmt: IF LP . Exp RP Stmt
   30     | IF LP . Exp RP Stmt

    INT    shift, and go to state 45
    FLOAT  shift, and go to state 46
    ID     shift, and go to state 47
    MINUS  shift, and go to state 50
    NOT    shift, and go to state 51
    LP     shift, and go to state 52

    Exp  go to state 79


State 63

   38 Exp: Exp . ASSIGNOP Exp
   39    | Exp . AND Exp
   40    | Exp . OR Exp
   41    | Exp . RELOP Exp
   42    | Exp . PLUS Exp
   43    | Exp . MINUS Exp
   44    | Exp . STAR Exp
   46    | MINUS Exp .

    $default  reduce using rule 46 (Exp)


State 64

   38 Exp: Exp . ASSIGNOP Exp
   39    | Exp . AND Exp
   40    | Exp . OR Exp
   41    | Exp . RELOP Exp
   42    | Exp . PLUS Exp
   43    | Exp . MINUS Exp
   44    | Exp . STAR Exp
   47    | NOT Exp .

    $default  reduce using rule 47 (Exp)


State 65

   38 Exp: Exp . ASSIGNOP Exp
   39    | Exp . AND Exp
   40    | Exp . OR Exp
   41    | Exp . RELOP Exp
   42    | Exp . PLUS Exp
   43    | Exp . MINUS Exp
   44    | Exp . STAR Exp
   45    | LP Exp . RP

    ASSIGNOP  shift, and go to state 69
    OR        shift, and go to state 70
    AND       shift, and go to state 71
    RELOP     shift, and go to state 72
    PLUS      shift, and go to state 73
    MINUS     shift, and go to state 74
    STAR      shift, and go to state 75
    RP        shift, and go to state 80


State 66

   23 CompSt: LC DefList StmtList RC .

    $default  reduce using rule 23 (CompSt)


State 67

   24 StmtList: Stmt StmtList .

    $default  reduce using rule 24 (StmtList)


State 68

   26 Stmt: Exp SEMI .

    $default  reduce using rule 26 (Stmt)


State 69

   38 Exp: Exp ASSIGNOP . Exp

    INT    shift, and go to state 45
    FLOAT  shift, and go to state 46
    ID     shift, and go to state 47
    MINUS  shift, and go to state 50
    NOT    shift, and go to state 51
    LP     shift, and go to state 52

    Exp  go to state 81


State 70

   40 Exp: Exp OR . Exp

    INT    shift, and go to state 45
    FLOAT  shift, and go to state 46
    ID     shift, and go to state 47
    MINUS  shift, and go to state 50
    NOT    shift, and go to state 51
    LP     shift, and go to state 52

    Exp  go to state 82


State 71

   39 Exp: Exp AND . Exp

    INT    shift, and go to state 45
    FLOAT  shift, and go to state 46
    ID     shift, and go to state 47
    MINUS  shift, and go to state 50
    NOT    shift, and go to state 51
    LP     shift, and go to state 52

    Exp  go to state 83


State 72

   41 Exp: Exp RELOP . Exp

    INT    shift, and go to state 45
    FLOAT  shift, and go to state 46
    ID     shift, and go to state 47
    MINUS  shift, and go to state 50
    NOT    shift, and go to state 51
    LP     shift, and go to state 52

    Exp  go to state 84


State 73

   42 Exp: Exp PLUS . Exp

    INT    shift, and go to state 45
    FLOAT  shift, and go to state 46
    ID     shift, and go to state 47
    MINUS  shift, and go to state 50
    NOT    shift, and go to state 51
    LP     shift, and go to state 52

    Exp  go to state 85


State 74

   43 Exp: Exp MINUS . Exp

    INT    shift, and go to state 45
    FLOAT  shift, and go to state 46
    ID     shift, and go to state 47
    MINUS  shift, and go to state 50
    NOT    shift, and go to state 51
    LP     shift, and go to state 52

    Exp  go to state 86


State 75

   44 Exp: Exp STAR . Exp

    INT    shift, and go to state 45
    FLOAT  shift, and go to state 46
    ID     shift, and go to state 47
    MINUS  shift, and go to state 50
    NOT    shift, and go to state 51
    LP     shift, and go to state 52

    Exp  go to state 87


State 76

   37 Dec: VarDec ASSIGNOP Exp .
   38 Exp: Exp . ASSIGNOP Exp
   39    | Exp . AND Exp
   40    | Exp . OR Exp
   41    | Exp . RELOP Exp
   42    | Exp . PLUS Exp
   43    | Exp . MINUS Exp
   44    | Exp . STAR Exp

    ASSIGNOP  shift, and go to state 69
    OR        shift, and go to state 70
    AND       shift, and go to state 71
    RELOP     shift, and go to state 72
    PLUS      shift, and go to state 73
    MINUS     shift, and go to state 74
    STAR      shift, and go to state 75

    $default  reduce using rule 37 (Dec)


State 77

   35 DecList: Dec COMMA DecList .

    $default  reduce using rule 35 (DecList)


State 78

   28 Stmt: RETURN Exp SEMI .

    $default  reduce using rule 28 (Stmt)


State 79

   29 Stmt: IF LP Exp . RP Stmt
   30     | IF LP Exp . RP Stmt
   38 Exp: Exp . ASSIGNOP Exp
   39    | Exp . AND Exp
   40    | Exp . OR Exp
   41    | Exp . RELOP Exp
   42    | Exp . PLUS Exp
   43    | Exp . MINUS Exp
   44    | Exp . STAR Exp

    ASSIGNOP  shift, and go to state 69
    OR        shift, and go to state 70
    AND       shift, and go to state 71
    RELOP     shift, and go to state 72
    PLUS      shift, and go to state 73
    MINUS     shift, and go to state 74
    STAR      shift, and go to state 75
    RP        shift, and go to state 88


State 80

   45 Exp: LP Exp RP .

    $default  reduce using rule 45 (Exp)


State 81

   38 Exp: Exp . ASSIGNOP Exp
   38    | Exp ASSIGNOP Exp .
   39    | Exp . AND Exp
   40    | Exp . OR Exp
   41    | Exp . RELOP Exp
   42    | Exp . PLUS Exp
   43    | Exp . MINUS Exp
   44    | Exp . STAR Exp

    ASSIGNOP  shift, and go to state 69
    OR        shift, and go to state 70
    AND       shift, and go to state 71
    RELOP     shift, and go to state 72
    PLUS      shift, and go to state 73
    MINUS     shift, and go to state 74
    STAR      shift, and go to state 75

    $default  reduce using rule 38 (Exp)


State 82

   38 Exp: Exp . ASSIGNOP Exp
   39    | Exp . AND Exp
   40    | Exp . OR Exp
   40    | Exp OR Exp .
   41    | Exp . RELOP Exp
   42    | Exp . PLUS Exp
   43    | Exp . MINUS Exp
   44    | Exp . STAR Exp

    AND    shift, and go to state 71
    RELOP  shift, and go to state 72
    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74
    STAR   shift, and go to state 75

    $default  reduce using rule 40 (Exp)


State 83

   38 Exp: Exp . ASSIGNOP Exp
   39    | Exp . AND Exp
   39    | Exp AND Exp .
   40    | Exp . OR Exp
   41    | Exp . RELOP Exp
   42    | Exp . PLUS Exp
   43    | Exp . MINUS Exp
   44    | Exp . STAR Exp

    RELOP  shift, and go to state 72
    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74
    STAR   shift, and go to state 75

    $default  reduce using rule 39 (Exp)


State 84

   38 Exp: Exp . ASSIGNOP Exp
   39    | Exp . AND Exp
   40    | Exp . OR Exp
   41    | Exp . RELOP Exp
   41    | Exp RELOP Exp .
   42    | Exp . PLUS Exp
   43    | Exp . MINUS Exp
   44    | Exp . STAR Exp

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74
    STAR   shift, and go to state 75

    $default  reduce using rule 41 (Exp)


State 85

   38 Exp: Exp . ASSIGNOP Exp
   39    | Exp . AND Exp
   40    | Exp . OR Exp
   41    | Exp . RELOP Exp
   42    | Exp . PLUS Exp
   42    | Exp PLUS Exp .
   43    | Exp . MINUS Exp
   44    | Exp . STAR Exp

    STAR  shift, and go to state 75

    $default  reduce using rule 42 (Exp)


State 86

   38 Exp: Exp . ASSIGNOP Exp
   39    | Exp . AND Exp
   40    | Exp . OR Exp
   41    | Exp . RELOP Exp
   42    | Exp . PLUS Exp
   43    | Exp . MINUS Exp
   43    | Exp MINUS Exp .
   44    | Exp . STAR Exp

    STAR  shift, and go to state 75

    $default  reduce using rule 43 (Exp)


State 87

   38 Exp: Exp . ASSIGNOP Exp
   39    | Exp . AND Exp
   40    | Exp . OR Exp
   41    | Exp . RELOP Exp
   42    | Exp . PLUS Exp
   43    | Exp . MINUS Exp
   44    | Exp . STAR Exp
   44    | Exp STAR Exp .

    $default  reduce using rule 44 (Exp)


State 88

   29 Stmt: IF LP Exp RP . Stmt
   30     | IF LP Exp RP . Stmt

    INT     shift, and go to state 45
    FLOAT   shift, and go to state 46
    ID      shift, and go to state 47
    LC      shift, and go to state 23
    RETURN  shift, and go to state 48
    IF      shift, and go to state 49
    MINUS   shift, and go to state 50
    NOT     shift, and go to state 51
    LP      shift, and go to state 52

    CompSt  go to state 53
    Stmt    go to state 89
    Exp     go to state 56


State 89

   29 Stmt: IF LP Exp RP Stmt .
   30     | IF LP Exp RP Stmt .

    INT       reduce using rule 29 (Stmt)
    INT       [reduce using rule 30 (Stmt)]
    FLOAT     reduce using rule 29 (Stmt)
    FLOAT     [reduce using rule 30 (Stmt)]
    ID        reduce using rule 29 (Stmt)
    ID        [reduce using rule 30 (Stmt)]
    LC        reduce using rule 29 (Stmt)
    LC        [reduce using rule 30 (Stmt)]
    RC        reduce using rule 29 (Stmt)
    RC        [reduce using rule 30 (Stmt)]
    RETURN    reduce using rule 29 (Stmt)
    RETURN    [reduce using rule 30 (Stmt)]
    IF        reduce using rule 29 (Stmt)
    IF        [reduce using rule 30 (Stmt)]
    MINUS     reduce using rule 29 (Stmt)
    MINUS     [reduce using rule 30 (Stmt)]
    NOT       reduce using rule 29 (Stmt)
    NOT       [reduce using rule 30 (Stmt)]
    LP        reduce using rule 29 (Stmt)
    LP        [reduce using rule 30 (Stmt)]
    $default  reduce using rule 29 (Stmt)
